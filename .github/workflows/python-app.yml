name: Python Application

on:
  push:
    branches: ["main","i200427","i202481","i200491"]
  pull_request:
    branches: ["main","i200427","i202481","i200491"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Setup DVC
      uses: iterative/setup-dvc@v1
    
    - name: GDrive Credentials 
      env:
        GDRIVE_CLIENT_ID: ${{ secrets.GDRIVE_CLIENT_ID }}
        GDRIVE_CLIENT_SECRET: ${{ secrets.GDRIVE_LINK}}
        GDRIVE_SERVICE_ACCOUNT_JSON: ${{ secrets.GDRIVE_API }}
      run: |
        echo "$GDRIVE_SERVICE_ACCOUNT_JSON" > dvc-remote-connections.json
        dvc remote modify storage gdrive_client_id $GDRIVE_CLIENT_ID
        dvc remote modify storage gdrive_client_secret $GDRIVE_CLIENT_SECRET
        dvc remote modify storage gdrive_service_account_json_file_path dvc-remote-connections.json

    - name: DVC Data Pull
      run: |
        dvc pull
    - name: DVC Data Generation   
      run: |
        python random_data.py
        dvc add dummy_sensor_data.csv 
    - name: Push data back to gdrive
      run: 'dvc push -r storage'

    - name: MLFLOW And Concept Drift
      run: |
        export MLFLOW_TRACKING_URI=${{secrets.MLFLOW_TRACKING_URI}}
        export MLFLOW_TRACKING_USERNAME=${{secrets.MLFLOW_TRACKING_USERNAME}}
        export MLFLOW_TRACKING_PASSWORD=${{secrets.MLFLOW_TRACKING_PASSWORD}}
        condition_result=$(python maintain.py)
        echo "condition_result=$condition_result" >> $GITHUB_ENV
        
    - name: Mlflow execution conditional
      if: ${{ env.condition_result == 'true' }}
      run: |
        export MLFLOW_TRACKING_URI=${{secrets.MLFLOW_TRACKING_URI}}
        export MLFLOW_TRACKING_USERNAME=${{secrets.MLFLOW_TRACKING_USERNAME}}
        export MLFLOW_TRACKING_PASSWORD=${{secrets.MLFLOW_TRACKING_PASSWORD}}
        python train.py
    - name: Docker Sign In
      if: ${{ env.condition_result == 'true' }}
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Conditionally Run - Build Docker Image
      if: ${{ env.condition_result == 'true' }}
      run: docker build . --file Dockerfile --tag mlopsdeadinside/project:latest
    - name: Conditionally Run - Push Docker Image
      if: ${{ env.condition_result == 'true' }}
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker push mlopsdeadinside/project:latest
